# Generated by roxygen2: do not edit by hand

export(Map2)
export(MapOrDoCall)
export(availableMemory)
export(biomassCalculation)
export(createPrjFile)
export(dataPurification_ABMaturePSP)
export(dataPurification_BCPSP)
export(dataPurification_NFIPSP)
export(dataPurification_SKPSP)
export(dataPurification_SKTSP_Mistik)
export(factorValues2)
export(getLocalArgsFor)
export(ghPkgName)
export(identifyVectorArgs)
export(isGitHubPkg)
export(knnLoadFun)
export(loadkNNSpeciesLayers)
export(makeClusterRandom)
export(makeForkClusterRandom)
export(makeOptimalCluster)
export(makeSockClusterRandom)
export(makeVegTypeMap)
export(optimalClusterNum)
export(prepFireCanada)
export(rasterToMatch)
export(toSentenceCase)
export(user)
export(writeEventInfo)
export(writeRNGInfo)
exportMethods(biomassCalculation)
exportMethods(rasterToMatch)
import(methods)
importFrom(RCurl,getURL)
importFrom(SpaDES.core,current)
importFrom(data.table,":=")
importFrom(data.table,data.table)
importFrom(data.table,rbindlist)
importFrom(data.table,set)
importFrom(data.table,setkey)
importFrom(data.table,setnames)
importFrom(fasterize,fasterize)
importFrom(graphics,plot)
importFrom(igraph,graph_from_data_frame)
importFrom(magrittr,"%>%")
importFrom(parallel,clusterEvalQ)
importFrom(parallel,clusterExport)
importFrom(parallel,clusterMap)
importFrom(parallel,clusterSetRNGStream)
importFrom(parallel,makeCluster)
importFrom(parallel,makeForkCluster)
importFrom(parallel,stopCluster)
importFrom(quickPlot,"setColors<-")
importFrom(quickPlot,layerNames)
importFrom(raster,"projection<-")
importFrom(raster,calc)
importFrom(raster,compareRaster)
importFrom(raster,crs)
importFrom(raster,extent)
importFrom(raster,filename)
importFrom(raster,getValues)
importFrom(raster,levels)
importFrom(raster,raster)
importFrom(raster,setValues)
importFrom(reproducible,Cache)
importFrom(reproducible,checkPath)
importFrom(reproducible,normPath)
importFrom(reproducible,pkgDep)
importFrom(reproducible,postProcess)
importFrom(reproducible,prepInputs)
importFrom(stats,na.omit)
importFrom(tools,file_path_sans_ext)
importFrom(utils,download.file)
importFrom(utils,getFromNamespace)
